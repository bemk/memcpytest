
3:     file format elf64-x86-64
3
architecture: i386:x86-64, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x0000000000400440

Program Header:
    PHDR off    0x0000000000000040 vaddr 0x0000000000400040 paddr 0x0000000000400040 align 2**3
         filesz 0x00000000000001f8 memsz 0x00000000000001f8 flags r-x
  INTERP off    0x0000000000000238 vaddr 0x0000000000400238 paddr 0x0000000000400238 align 2**0
         filesz 0x000000000000001c memsz 0x000000000000001c flags r--
    LOAD off    0x0000000000000000 vaddr 0x0000000000400000 paddr 0x0000000000400000 align 2**21
         filesz 0x0000000000000764 memsz 0x0000000000000764 flags r-x
    LOAD off    0x0000000000000e18 vaddr 0x0000000000600e18 paddr 0x0000000000600e18 align 2**21
         filesz 0x0000000000000208 memsz 0x0000000000000218 flags rw-
 DYNAMIC off    0x0000000000000e40 vaddr 0x0000000000600e40 paddr 0x0000000000600e40 align 2**3
         filesz 0x00000000000001a0 memsz 0x00000000000001a0 flags rw-
    NOTE off    0x0000000000000254 vaddr 0x0000000000400254 paddr 0x0000000000400254 align 2**2
         filesz 0x0000000000000044 memsz 0x0000000000000044 flags r--
EH_FRAME off    0x000000000000069c vaddr 0x000000000040069c paddr 0x000000000040069c align 2**2
         filesz 0x000000000000002c memsz 0x000000000000002c flags r--
   STACK off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**3
         filesz 0x0000000000000000 memsz 0x0000000000000000 flags rw-
   RELRO off    0x0000000000000e18 vaddr 0x0000000000600e18 paddr 0x0000000000600e18 align 2**0
         filesz 0x00000000000001e8 memsz 0x00000000000001e8 flags r--

Dynamic Section:
  NEEDED               libc.so.6
  INIT                 0x00000000004003f0
  FINI                 0x0000000000400688
  HASH                 0x0000000000400298
  GNU_HASH             0x00000000004002c0
  STRTAB               0x0000000000400340
  SYMTAB               0x00000000004002e0
  STRSZ                0x000000000000003f
  SYMENT               0x0000000000000018
  DEBUG                0x0000000000000000
  PLTGOT               0x0000000000600fe8
  PLTRELSZ             0x0000000000000030
  PLTREL               0x0000000000000007
  JMPREL               0x00000000004003c0
  RELA                 0x00000000004003a8
  RELASZ               0x0000000000000018
  RELAENT              0x0000000000000018
  VERNEED              0x0000000000400388
  VERNEEDNUM           0x0000000000000001
  VERSYM               0x0000000000400380

Version References:
  required from libc.so.6:
    0x09691a75 0x00 02 GLIBC_2.2.5

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .interp       0000001c  0000000000400238  0000000000400238  00000238  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .note.ABI-tag 00000020  0000000000400254  0000000000400254  00000254  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .note.gnu.build-id 00000024  0000000000400274  0000000000400274  00000274  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .hash         00000024  0000000000400298  0000000000400298  00000298  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .gnu.hash     0000001c  00000000004002c0  00000000004002c0  000002c0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dynsym       00000060  00000000004002e0  00000000004002e0  000002e0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .dynstr       0000003f  0000000000400340  0000000000400340  00000340  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .gnu.version  00000008  0000000000400380  0000000000400380  00000380  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .gnu.version_r 00000020  0000000000400388  0000000000400388  00000388  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .rela.dyn     00000018  00000000004003a8  00000000004003a8  000003a8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 10 .rela.plt     00000030  00000000004003c0  00000000004003c0  000003c0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 11 .init         00000018  00000000004003f0  00000000004003f0  000003f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .plt          00000030  0000000000400408  0000000000400408  00000408  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .text         00000248  0000000000400440  0000000000400440  00000440  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .fini         0000000e  0000000000400688  0000000000400688  00000688  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .rodata       00000004  0000000000400698  0000000000400698  00000698  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .eh_frame_hdr 0000002c  000000000040069c  000000000040069c  0000069c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .eh_frame     0000009c  00000000004006c8  00000000004006c8  000006c8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 .ctors        00000010  0000000000600e18  0000000000600e18  00000e18  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 19 .dtors        00000010  0000000000600e28  0000000000600e28  00000e28  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 20 .jcr          00000008  0000000000600e38  0000000000600e38  00000e38  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 21 .dynamic      000001a0  0000000000600e40  0000000000600e40  00000e40  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 22 .got          00000008  0000000000600fe0  0000000000600fe0  00000fe0  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 23 .got.plt      00000028  0000000000600fe8  0000000000600fe8  00000fe8  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 24 .data         00000010  0000000000601010  0000000000601010  00001010  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 25 .bss          00000010  0000000000601020  0000000000601020  00001020  2**3
                  ALLOC
 26 .comment      00000023  0000000000000000  0000000000000000  00001020  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
0000000000400238 l    d  .interp	0000000000000000              .interp
0000000000400254 l    d  .note.ABI-tag	0000000000000000              .note.ABI-tag
0000000000400274 l    d  .note.gnu.build-id	0000000000000000              .note.gnu.build-id
0000000000400298 l    d  .hash	0000000000000000              .hash
00000000004002c0 l    d  .gnu.hash	0000000000000000              .gnu.hash
00000000004002e0 l    d  .dynsym	0000000000000000              .dynsym
0000000000400340 l    d  .dynstr	0000000000000000              .dynstr
0000000000400380 l    d  .gnu.version	0000000000000000              .gnu.version
0000000000400388 l    d  .gnu.version_r	0000000000000000              .gnu.version_r
00000000004003a8 l    d  .rela.dyn	0000000000000000              .rela.dyn
00000000004003c0 l    d  .rela.plt	0000000000000000              .rela.plt
00000000004003f0 l    d  .init	0000000000000000              .init
0000000000400408 l    d  .plt	0000000000000000              .plt
0000000000400440 l    d  .text	0000000000000000              .text
0000000000400688 l    d  .fini	0000000000000000              .fini
0000000000400698 l    d  .rodata	0000000000000000              .rodata
000000000040069c l    d  .eh_frame_hdr	0000000000000000              .eh_frame_hdr
00000000004006c8 l    d  .eh_frame	0000000000000000              .eh_frame
0000000000600e18 l    d  .ctors	0000000000000000              .ctors
0000000000600e28 l    d  .dtors	0000000000000000              .dtors
0000000000600e38 l    d  .jcr	0000000000000000              .jcr
0000000000600e40 l    d  .dynamic	0000000000000000              .dynamic
0000000000600fe0 l    d  .got	0000000000000000              .got
0000000000600fe8 l    d  .got.plt	0000000000000000              .got.plt
0000000000601010 l    d  .data	0000000000000000              .data
0000000000601020 l    d  .bss	0000000000000000              .bss
0000000000000000 l    d  .comment	0000000000000000              .comment
000000000040046c l     F .text	0000000000000000              call_gmon_start
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
0000000000600e18 l     O .ctors	0000000000000000              __CTOR_LIST__
0000000000600e28 l     O .dtors	0000000000000000              __DTOR_LIST__
0000000000600e38 l     O .jcr	0000000000000000              __JCR_LIST__
0000000000400490 l     F .text	0000000000000000              __do_global_dtors_aux
0000000000601020 l     O .bss	0000000000000001              completed.7382
0000000000601028 l     O .bss	0000000000000008              dtor_idx.7384
0000000000400500 l     F .text	0000000000000000              frame_dummy
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
0000000000600e20 l     O .ctors	0000000000000000              __CTOR_END__
0000000000400760 l     O .eh_frame	0000000000000000              __FRAME_END__
0000000000600e38 l     O .jcr	0000000000000000              __JCR_END__
0000000000400650 l     F .text	0000000000000000              __do_global_ctors_aux
0000000000000000 l    df *ABS*	0000000000000000              memcpy3.c
0000000000600fe8 l     O .got.plt	0000000000000000              .hidden _GLOBAL_OFFSET_TABLE_
0000000000600e14 l       .ctors	0000000000000000              .hidden __init_array_end
0000000000600e14 l       .ctors	0000000000000000              .hidden __init_array_start
0000000000600e40 l     O .dynamic	0000000000000000              .hidden _DYNAMIC
0000000000601010  w      .data	0000000000000000              data_start
00000000004005b0 g     F .text	0000000000000002              __libc_csu_fini
0000000000400440 g     F .text	0000000000000000              _start
0000000000000000  w      *UND*	0000000000000000              __gmon_start__
0000000000000000  w      *UND*	0000000000000000              _Jv_RegisterClasses
0000000000400688 g     F .fini	0000000000000000              _fini
0000000000000000       F *UND*	0000000000000000              malloc@@GLIBC_2.2.5
0000000000000000       F *UND*	0000000000000000              __libc_start_main@@GLIBC_2.2.5
0000000000400698 g     O .rodata	0000000000000004              _IO_stdin_used
0000000000601010 g       .data	0000000000000000              __data_start
0000000000601018 g     O .data	0000000000000000              .hidden __dso_handle
0000000000600e30 g     O .dtors	0000000000000000              .hidden __DTOR_END__
00000000004005c0 g     F .text	0000000000000089              __libc_csu_init
0000000000400524 g     F .text	0000000000000025              memcpy1
0000000000601020 g       *ABS*	0000000000000000              __bss_start
0000000000601030 g       *ABS*	0000000000000000              _end
0000000000601020 g       *ABS*	0000000000000000              _edata
0000000000400549 g     F .text	0000000000000061              main
00000000004003f0 g     F .init	0000000000000000              _init



Disassembly of section .interp:

0000000000400238 <.interp>:
  400238:	2f                   	(bad)  
  400239:	6c                   	insb   (%dx),%es:(%rdi)
  40023a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
  400241:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
  400246:	78 2d                	js     400275 <_init-0x17b>
  400248:	78 38                	js     400282 <_init-0x16e>
  40024a:	36                   	ss
  40024b:	2d 36 34 2e 73       	sub    $0x732e3436,%eax
  400250:	6f                   	outsl  %ds:(%rsi),(%dx)
  400251:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.ABI-tag:

0000000000400254 <.note.ABI-tag>:
  400254:	04 00                	add    $0x0,%al
  400256:	00 00                	add    %al,(%rax)
  400258:	10 00                	adc    %al,(%rax)
  40025a:	00 00                	add    %al,(%rax)
  40025c:	01 00                	add    %eax,(%rax)
  40025e:	00 00                	add    %al,(%rax)
  400260:	47                   	rex.RXB
  400261:	4e 55                	rex.WRX push   %rbp
  400263:	00 00                	add    %al,(%rax)
  400265:	00 00                	add    %al,(%rax)
  400267:	00 02                	add    %al,(%rdx)
  400269:	00 00                	add    %al,(%rax)
  40026b:	00 06                	add    %al,(%rsi)
  40026d:	00 00                	add    %al,(%rax)
  40026f:	00 0f                	add    %cl,(%rdi)
  400271:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000400274 <.note.gnu.build-id>:
  400274:	04 00                	add    $0x0,%al
  400276:	00 00                	add    %al,(%rax)
  400278:	14 00                	adc    $0x0,%al
  40027a:	00 00                	add    %al,(%rax)
  40027c:	03 00                	add    (%rax),%eax
  40027e:	00 00                	add    %al,(%rax)
  400280:	47                   	rex.RXB
  400281:	4e 55                	rex.WRX push   %rbp
  400283:	00 d9                	add    %bl,%cl
  400285:	3a 4c e0 f1          	cmp    -0xf(%rax,%riz,8),%cl
  400289:	0c e9                	or     $0xe9,%al
  40028b:	9a                   	(bad)  
  40028c:	be c9 74 96 5d       	mov    $0x5d9674c9,%esi
  400291:	d9 09                	(bad)  (%rcx)
  400293:	fb                   	sti    
  400294:	9d                   	popfq  
  400295:	66                   	data16
  400296:	2c 7b                	sub    $0x7b,%al

Disassembly of section .hash:

0000000000400298 <.hash>:
  400298:	03 00                	add    (%rax),%eax
  40029a:	00 00                	add    %al,(%rax)
  40029c:	04 00                	add    $0x0,%al
  40029e:	00 00                	add    %al,(%rax)
  4002a0:	01 00                	add    %eax,(%rax)
  4002a2:	00 00                	add    %al,(%rax)
  4002a4:	03 00                	add    (%rax),%eax
  4002a6:	00 00                	add    %al,(%rax)
  4002a8:	02 00                	add    (%rax),%al
	...

Disassembly of section .gnu.hash:

00000000004002c0 <.gnu.hash>:
  4002c0:	01 00                	add    %eax,(%rax)
  4002c2:	00 00                	add    %al,(%rax)
  4002c4:	01 00                	add    %eax,(%rax)
  4002c6:	00 00                	add    %al,(%rax)
  4002c8:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .dynsym:

00000000004002e0 <.dynsym>:
	...
  4002f8:	01 00                	add    %eax,(%rax)
  4002fa:	00 00                	add    %al,(%rax)
  4002fc:	20 00                	and    %al,(%rax)
	...
  40030e:	00 00                	add    %al,(%rax)
  400310:	1a 00                	sbb    (%rax),%al
  400312:	00 00                	add    %al,(%rax)
  400314:	12 00                	adc    (%rax),%al
	...
  400326:	00 00                	add    %al,(%rax)
  400328:	21 00                	and    %eax,(%rax)
  40032a:	00 00                	add    %al,(%rax)
  40032c:	12 00                	adc    (%rax),%al
	...

Disassembly of section .dynstr:

0000000000400340 <.dynstr>:
  400340:	00 5f 5f             	add    %bl,0x5f(%rdi)
  400343:	67 6d                	addr32 insl (%dx),%es:(%edi)
  400345:	6f                   	outsl  %ds:(%rsi),(%dx)
  400346:	6e                   	outsb  %ds:(%rsi),(%dx)
  400347:	5f                   	pop    %rdi
  400348:	73 74                	jae    4003be <_init-0x32>
  40034a:	61                   	(bad)  
  40034b:	72 74                	jb     4003c1 <_init-0x2f>
  40034d:	5f                   	pop    %rdi
  40034e:	5f                   	pop    %rdi
  40034f:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
  400353:	63 2e                	movslq (%rsi),%ebp
  400355:	73 6f                	jae    4003c6 <_init-0x2a>
  400357:	2e 36 00 6d 61       	add    %ch,%cs:%ss:0x61(%rbp)
  40035c:	6c                   	insb   (%dx),%es:(%rdi)
  40035d:	6c                   	insb   (%dx),%es:(%rdi)
  40035e:	6f                   	outsl  %ds:(%rsi),(%dx)
  40035f:	63 00                	movslq (%rax),%eax
  400361:	5f                   	pop    %rdi
  400362:	5f                   	pop    %rdi
  400363:	6c                   	insb   (%dx),%es:(%rdi)
  400364:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
  40036b:	72 74                	jb     4003e1 <_init-0xf>
  40036d:	5f                   	pop    %rdi
  40036e:	6d                   	insl   (%dx),%es:(%rdi)
  40036f:	61                   	(bad)  
  400370:	69 6e 00 47 4c 49 42 	imul   $0x42494c47,0x0(%rsi),%ebp
  400377:	43 5f                	rex.XB pop    %r15
  400379:	32 2e                	xor    (%rsi),%ch
  40037b:	32 2e                	xor    (%rsi),%ch
  40037d:	35                   	.byte 0x35
	...

Disassembly of section .gnu.version:

0000000000400380 <.gnu.version>:
  400380:	00 00                	add    %al,(%rax)
  400382:	00 00                	add    %al,(%rax)
  400384:	02 00                	add    (%rax),%al
  400386:	02 00                	add    (%rax),%al

Disassembly of section .gnu.version_r:

0000000000400388 <.gnu.version_r>:
  400388:	01 00                	add    %eax,(%rax)
  40038a:	01 00                	add    %eax,(%rax)
  40038c:	10 00                	adc    %al,(%rax)
  40038e:	00 00                	add    %al,(%rax)
  400390:	10 00                	adc    %al,(%rax)
  400392:	00 00                	add    %al,(%rax)
  400394:	00 00                	add    %al,(%rax)
  400396:	00 00                	add    %al,(%rax)
  400398:	75 1a                	jne    4003b4 <_init-0x3c>
  40039a:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
  4003a0:	33 00                	xor    (%rax),%eax
  4003a2:	00 00                	add    %al,(%rax)
  4003a4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

00000000004003a8 <.rela.dyn>:
  4003a8:	e0 0f                	loopne 4003b9 <_init-0x37>
  4003aa:	60                   	(bad)  
  4003ab:	00 00                	add    %al,(%rax)
  4003ad:	00 00                	add    %al,(%rax)
  4003af:	00 06                	add    %al,(%rsi)
  4003b1:	00 00                	add    %al,(%rax)
  4003b3:	00 01                	add    %al,(%rcx)
	...

Disassembly of section .rela.plt:

00000000004003c0 <.rela.plt>:
  4003c0:	00 10                	add    %dl,(%rax)
  4003c2:	60                   	(bad)  
  4003c3:	00 00                	add    %al,(%rax)
  4003c5:	00 00                	add    %al,(%rax)
  4003c7:	00 07                	add    %al,(%rdi)
  4003c9:	00 00                	add    %al,(%rax)
  4003cb:	00 02                	add    %al,(%rdx)
	...
  4003d5:	00 00                	add    %al,(%rax)
  4003d7:	00 08                	add    %cl,(%rax)
  4003d9:	10 60 00             	adc    %ah,0x0(%rax)
  4003dc:	00 00                	add    %al,(%rax)
  4003de:	00 00                	add    %al,(%rax)
  4003e0:	07                   	(bad)  
  4003e1:	00 00                	add    %al,(%rax)
  4003e3:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .init:

00000000004003f0 <_init>:
  4003f0:	48 83 ec 08          	sub    $0x8,%rsp
  4003f4:	e8 73 00 00 00       	callq  40046c <call_gmon_start>
  4003f9:	e8 02 01 00 00       	callq  400500 <frame_dummy>
  4003fe:	e8 4d 02 00 00       	callq  400650 <__do_global_ctors_aux>
  400403:	48 83 c4 08          	add    $0x8,%rsp
  400407:	c3                   	retq   

Disassembly of section .plt:

0000000000400408 <malloc@plt-0x10>:
  400408:	ff 35 e2 0b 20 00    	pushq  0x200be2(%rip)        # 600ff0 <_GLOBAL_OFFSET_TABLE_+0x8>
  40040e:	ff 25 e4 0b 20 00    	jmpq   *0x200be4(%rip)        # 600ff8 <_GLOBAL_OFFSET_TABLE_+0x10>
  400414:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400418 <malloc@plt>:
  400418:	ff 25 e2 0b 20 00    	jmpq   *0x200be2(%rip)        # 601000 <_GLOBAL_OFFSET_TABLE_+0x18>
  40041e:	68 00 00 00 00       	pushq  $0x0
  400423:	e9 e0 ff ff ff       	jmpq   400408 <_init+0x18>

0000000000400428 <__libc_start_main@plt>:
  400428:	ff 25 da 0b 20 00    	jmpq   *0x200bda(%rip)        # 601008 <_GLOBAL_OFFSET_TABLE_+0x20>
  40042e:	68 01 00 00 00       	pushq  $0x1
  400433:	e9 d0 ff ff ff       	jmpq   400408 <_init+0x18>

Disassembly of section .text:

0000000000400440 <_start>:
  400440:	31 ed                	xor    %ebp,%ebp
  400442:	49 89 d1             	mov    %rdx,%r9
  400445:	5e                   	pop    %rsi
  400446:	48 89 e2             	mov    %rsp,%rdx
  400449:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  40044d:	50                   	push   %rax
  40044e:	54                   	push   %rsp
  40044f:	49 c7 c0 b0 05 40 00 	mov    $0x4005b0,%r8
  400456:	48 c7 c1 c0 05 40 00 	mov    $0x4005c0,%rcx
  40045d:	48 c7 c7 49 05 40 00 	mov    $0x400549,%rdi
  400464:	e8 bf ff ff ff       	callq  400428 <__libc_start_main@plt>
  400469:	f4                   	hlt    
  40046a:	90                   	nop
  40046b:	90                   	nop

000000000040046c <call_gmon_start>:
  40046c:	48 83 ec 08          	sub    $0x8,%rsp
  400470:	48 8b 05 69 0b 20 00 	mov    0x200b69(%rip),%rax        # 600fe0 <_DYNAMIC+0x1a0>
  400477:	48 85 c0             	test   %rax,%rax
  40047a:	74 02                	je     40047e <call_gmon_start+0x12>
  40047c:	ff d0                	callq  *%rax
  40047e:	48 83 c4 08          	add    $0x8,%rsp
  400482:	c3                   	retq   
  400483:	90                   	nop
  400484:	90                   	nop
  400485:	90                   	nop
  400486:	90                   	nop
  400487:	90                   	nop
  400488:	90                   	nop
  400489:	90                   	nop
  40048a:	90                   	nop
  40048b:	90                   	nop
  40048c:	90                   	nop
  40048d:	90                   	nop
  40048e:	90                   	nop
  40048f:	90                   	nop

0000000000400490 <__do_global_dtors_aux>:
  400490:	55                   	push   %rbp
  400491:	48 89 e5             	mov    %rsp,%rbp
  400494:	53                   	push   %rbx
  400495:	48 83 ec 08          	sub    $0x8,%rsp
  400499:	80 3d 80 0b 20 00 00 	cmpb   $0x0,0x200b80(%rip)        # 601020 <__bss_start>
  4004a0:	75 4b                	jne    4004ed <__do_global_dtors_aux+0x5d>
  4004a2:	bb 30 0e 60 00       	mov    $0x600e30,%ebx
  4004a7:	48 8b 05 7a 0b 20 00 	mov    0x200b7a(%rip),%rax        # 601028 <dtor_idx.7384>
  4004ae:	48 81 eb 28 0e 60 00 	sub    $0x600e28,%rbx
  4004b5:	48 c1 fb 03          	sar    $0x3,%rbx
  4004b9:	48 83 eb 01          	sub    $0x1,%rbx
  4004bd:	48 39 d8             	cmp    %rbx,%rax
  4004c0:	73 24                	jae    4004e6 <__do_global_dtors_aux+0x56>
  4004c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  4004c8:	48 83 c0 01          	add    $0x1,%rax
  4004cc:	48 89 05 55 0b 20 00 	mov    %rax,0x200b55(%rip)        # 601028 <dtor_idx.7384>
  4004d3:	ff 14 c5 28 0e 60 00 	callq  *0x600e28(,%rax,8)
  4004da:	48 8b 05 47 0b 20 00 	mov    0x200b47(%rip),%rax        # 601028 <dtor_idx.7384>
  4004e1:	48 39 d8             	cmp    %rbx,%rax
  4004e4:	72 e2                	jb     4004c8 <__do_global_dtors_aux+0x38>
  4004e6:	c6 05 33 0b 20 00 01 	movb   $0x1,0x200b33(%rip)        # 601020 <__bss_start>
  4004ed:	48 83 c4 08          	add    $0x8,%rsp
  4004f1:	5b                   	pop    %rbx
  4004f2:	c9                   	leaveq 
  4004f3:	c3                   	retq   
  4004f4:	66 66 66 2e 0f 1f 84 	nopw   %cs:0x0(%rax,%rax,1)
  4004fb:	00 00 00 00 00 

0000000000400500 <frame_dummy>:
  400500:	55                   	push   %rbp
  400501:	48 83 3d 2f 09 20 00 	cmpq   $0x0,0x20092f(%rip)        # 600e38 <__JCR_END__>
  400508:	00 
  400509:	48 89 e5             	mov    %rsp,%rbp
  40050c:	74 12                	je     400520 <frame_dummy+0x20>
  40050e:	b8 00 00 00 00       	mov    $0x0,%eax
  400513:	48 85 c0             	test   %rax,%rax
  400516:	74 08                	je     400520 <frame_dummy+0x20>
  400518:	bf 38 0e 60 00       	mov    $0x600e38,%edi
  40051d:	c9                   	leaveq 
  40051e:	ff e0                	jmpq   *%rax
  400520:	c9                   	leaveq 
  400521:	c3                   	retq   
  400522:	90                   	nop
  400523:	90                   	nop

0000000000400524 <memcpy1>:
  400524:	55                   	push   %rbp
  400525:	48 89 e5             	mov    %rsp,%rbp
  400528:	53                   	push   %rbx
  400529:	48 89 fb             	mov    %rdi,%rbx
  40052c:	48 89 f1             	mov    %rsi,%rcx
  40052f:	89 d0                	mov    %edx,%eax
  400531:	0f b7 11             	movzwl (%rcx),%edx
  400534:	66 89 13             	mov    %dx,(%rbx)
  400537:	48 83 c3 02          	add    $0x2,%rbx
  40053b:	48 83 c1 02          	add    $0x2,%rcx
  40053f:	83 e8 01             	sub    $0x1,%eax
  400542:	85 c0                	test   %eax,%eax
  400544:	7f eb                	jg     400531 <memcpy1+0xd>
  400546:	5b                   	pop    %rbx
  400547:	c9                   	leaveq 
  400548:	c3                   	retq   

0000000000400549 <main>:
  400549:	55                   	push   %rbp
  40054a:	48 89 e5             	mov    %rsp,%rbp
  40054d:	48 83 ec 20          	sub    $0x20,%rsp
  400551:	bf 00 00 10 00       	mov    $0x100000,%edi
  400556:	e8 bd fe ff ff       	callq  400418 <malloc@plt>
  40055b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40055f:	bf 00 00 10 00       	mov    $0x100000,%edi
  400564:	e8 af fe ff ff       	callq  400418 <malloc@plt>
  400569:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40056d:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
  400574:	00 
  400575:	eb 22                	jmp    400599 <main+0x50>
  400577:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  40057b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40057f:	ba 00 00 10 00       	mov    $0x100000,%edx
  400584:	48 89 ce             	mov    %rcx,%rsi
  400587:	48 89 c7             	mov    %rax,%rdi
  40058a:	b8 00 00 00 00       	mov    $0x0,%eax
  40058f:	e8 90 ff ff ff       	callq  400524 <memcpy1>
  400594:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  400599:	48 81 7d e8 fe 00 00 	cmpq   $0xfe,-0x18(%rbp)
  4005a0:	00 
  4005a1:	7e d4                	jle    400577 <main+0x2e>
  4005a3:	b8 00 00 00 00       	mov    $0x0,%eax
  4005a8:	c9                   	leaveq 
  4005a9:	c3                   	retq   
  4005aa:	90                   	nop
  4005ab:	90                   	nop
  4005ac:	90                   	nop
  4005ad:	90                   	nop
  4005ae:	90                   	nop
  4005af:	90                   	nop

00000000004005b0 <__libc_csu_fini>:
  4005b0:	f3 c3                	repz retq 
  4005b2:	66 66 66 66 66 2e 0f 	nopw   %cs:0x0(%rax,%rax,1)
  4005b9:	1f 84 00 00 00 00 00 

00000000004005c0 <__libc_csu_init>:
  4005c0:	48 89 6c 24 d8       	mov    %rbp,-0x28(%rsp)
  4005c5:	4c 89 64 24 e0       	mov    %r12,-0x20(%rsp)
  4005ca:	48 8d 2d 43 08 20 00 	lea    0x200843(%rip),%rbp        # 600e14 <__init_array_end>
  4005d1:	4c 8d 25 3c 08 20 00 	lea    0x20083c(%rip),%r12        # 600e14 <__init_array_end>
  4005d8:	4c 89 6c 24 e8       	mov    %r13,-0x18(%rsp)
  4005dd:	4c 89 74 24 f0       	mov    %r14,-0x10(%rsp)
  4005e2:	4c 89 7c 24 f8       	mov    %r15,-0x8(%rsp)
  4005e7:	48 89 5c 24 d0       	mov    %rbx,-0x30(%rsp)
  4005ec:	48 83 ec 38          	sub    $0x38,%rsp
  4005f0:	4c 29 e5             	sub    %r12,%rbp
  4005f3:	41 89 fd             	mov    %edi,%r13d
  4005f6:	49 89 f6             	mov    %rsi,%r14
  4005f9:	48 c1 fd 03          	sar    $0x3,%rbp
  4005fd:	49 89 d7             	mov    %rdx,%r15
  400600:	e8 eb fd ff ff       	callq  4003f0 <_init>
  400605:	48 85 ed             	test   %rbp,%rbp
  400608:	74 1c                	je     400626 <__libc_csu_init+0x66>
  40060a:	31 db                	xor    %ebx,%ebx
  40060c:	0f 1f 40 00          	nopl   0x0(%rax)
  400610:	4c 89 fa             	mov    %r15,%rdx
  400613:	4c 89 f6             	mov    %r14,%rsi
  400616:	44 89 ef             	mov    %r13d,%edi
  400619:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  40061d:	48 83 c3 01          	add    $0x1,%rbx
  400621:	48 39 eb             	cmp    %rbp,%rbx
  400624:	72 ea                	jb     400610 <__libc_csu_init+0x50>
  400626:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
  40062b:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
  400630:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
  400635:	4c 8b 6c 24 20       	mov    0x20(%rsp),%r13
  40063a:	4c 8b 74 24 28       	mov    0x28(%rsp),%r14
  40063f:	4c 8b 7c 24 30       	mov    0x30(%rsp),%r15
  400644:	48 83 c4 38          	add    $0x38,%rsp
  400648:	c3                   	retq   
  400649:	90                   	nop
  40064a:	90                   	nop
  40064b:	90                   	nop
  40064c:	90                   	nop
  40064d:	90                   	nop
  40064e:	90                   	nop
  40064f:	90                   	nop

0000000000400650 <__do_global_ctors_aux>:
  400650:	55                   	push   %rbp
  400651:	48 89 e5             	mov    %rsp,%rbp
  400654:	53                   	push   %rbx
  400655:	48 83 ec 08          	sub    $0x8,%rsp
  400659:	48 8b 05 b8 07 20 00 	mov    0x2007b8(%rip),%rax        # 600e18 <__CTOR_LIST__>
  400660:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  400664:	74 19                	je     40067f <__do_global_ctors_aux+0x2f>
  400666:	bb 18 0e 60 00       	mov    $0x600e18,%ebx
  40066b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  400670:	48 83 eb 08          	sub    $0x8,%rbx
  400674:	ff d0                	callq  *%rax
  400676:	48 8b 03             	mov    (%rbx),%rax
  400679:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  40067d:	75 f1                	jne    400670 <__do_global_ctors_aux+0x20>
  40067f:	48 83 c4 08          	add    $0x8,%rsp
  400683:	5b                   	pop    %rbx
  400684:	c9                   	leaveq 
  400685:	c3                   	retq   
  400686:	90                   	nop
  400687:	90                   	nop

Disassembly of section .fini:

0000000000400688 <_fini>:
  400688:	48 83 ec 08          	sub    $0x8,%rsp
  40068c:	e8 ff fd ff ff       	callq  400490 <__do_global_dtors_aux>
  400691:	48 83 c4 08          	add    $0x8,%rsp
  400695:	c3                   	retq   

Disassembly of section .rodata:

0000000000400698 <_IO_stdin_used>:
  400698:	01 00                	add    %eax,(%rax)
  40069a:	02 00                	add    (%rax),%al

Disassembly of section .eh_frame_hdr:

000000000040069c <.eh_frame_hdr>:
  40069c:	01 1b                	add    %ebx,(%rbx)
  40069e:	03 3b                	add    (%rbx),%edi
  4006a0:	28 00                	sub    %al,(%rax)
  4006a2:	00 00                	add    %al,(%rax)
  4006a4:	04 00                	add    $0x0,%al
  4006a6:	00 00                	add    %al,(%rax)
  4006a8:	88 fe                	mov    %bh,%dh
  4006aa:	ff                   	(bad)  
  4006ab:	ff 44 00 00          	incl   0x0(%rax,%rax,1)
  4006af:	00 ad fe ff ff 64    	add    %ch,0x64fffffe(%rbp)
  4006b5:	00 00                	add    %al,(%rax)
  4006b7:	00 14 ff             	add    %dl,(%rdi,%rdi,8)
  4006ba:	ff                   	(bad)  
  4006bb:	ff 84 00 00 00 24 ff 	incl   -0xdc0000(%rax,%rax,1)
  4006c2:	ff                   	(bad)  
  4006c3:	ff                   	.byte 0xff
  4006c4:	9c                   	pushfq 
  4006c5:	00 00                	add    %al,(%rax)
	...

Disassembly of section .eh_frame:

00000000004006c8 <__FRAME_END__-0x98>:
  4006c8:	14 00                	adc    $0x0,%al
  4006ca:	00 00                	add    %al,(%rax)
  4006cc:	00 00                	add    %al,(%rax)
  4006ce:	00 00                	add    %al,(%rax)
  4006d0:	01 7a 52             	add    %edi,0x52(%rdx)
  4006d3:	00 01                	add    %al,(%rcx)
  4006d5:	78 10                	js     4006e7 <_IO_stdin_used+0x4f>
  4006d7:	01 1b                	add    %ebx,(%rbx)
  4006d9:	0c 07                	or     $0x7,%al
  4006db:	08 90 01 00 00 1c    	or     %dl,0x1c000001(%rax)
  4006e1:	00 00                	add    %al,(%rax)
  4006e3:	00 1c 00             	add    %bl,(%rax,%rax,1)
  4006e6:	00 00                	add    %al,(%rax)
  4006e8:	3c fe                	cmp    $0xfe,%al
  4006ea:	ff                   	(bad)  
  4006eb:	ff 25 00 00 00 00    	jmpq   *0x0(%rip)        # 4006f1 <_IO_stdin_used+0x59>
  4006f1:	41 0e                	rex.B (bad)  
  4006f3:	10 43 86             	adc    %al,-0x7a(%rbx)
  4006f6:	02 0d 06 44 83 03    	add    0x3834406(%rip),%cl        # 3c34b02 <_end+0x3633ad2>
  4006fc:	00 00                	add    %al,(%rax)
  4006fe:	00 00                	add    %al,(%rax)
  400700:	1c 00                	sbb    $0x0,%al
  400702:	00 00                	add    %al,(%rax)
  400704:	3c 00                	cmp    $0x0,%al
  400706:	00 00                	add    %al,(%rax)
  400708:	41 fe                	rex.B (bad)  
  40070a:	ff                   	(bad)  
  40070b:	ff 61 00             	jmpq   *0x0(%rcx)
  40070e:	00 00                	add    %al,(%rax)
  400710:	00 41 0e             	add    %al,0xe(%rcx)
  400713:	10 43 86             	adc    %al,-0x7a(%rbx)
  400716:	02 0d 06 00 00 00    	add    0x6(%rip),%cl        # 400722 <_IO_stdin_used+0x8a>
  40071c:	00 00                	add    %al,(%rax)
  40071e:	00 00                	add    %al,(%rax)
  400720:	14 00                	adc    $0x0,%al
  400722:	00 00                	add    %al,(%rax)
  400724:	5c                   	pop    %rsp
  400725:	00 00                	add    %al,(%rax)
  400727:	00 88 fe ff ff 02    	add    %cl,0x2fffffe(%rax)
	...
  400735:	00 00                	add    %al,(%rax)
  400737:	00 24 00             	add    %ah,(%rax,%rax,1)
  40073a:	00 00                	add    %al,(%rax)
  40073c:	74 00                	je     40073e <_IO_stdin_used+0xa6>
  40073e:	00 00                	add    %al,(%rax)
  400740:	80 fe ff             	cmp    $0xff,%dh
  400743:	ff 89 00 00 00 00    	decl   0x0(%rcx)
  400749:	51                   	push   %rcx
  40074a:	8c 05 86 06 5f 0e    	mov    %es,0xe5f0686(%rip)        # e9f0dd6 <_end+0xe3efda6>
  400750:	40                   	rex
  400751:	46 83 07 8f          	rex.RX addl   $0xffffffffffffff8f,(%rdi)
  400755:	02 8e 03 8d 04 00    	add    0x48d03(%rsi),%cl
  40075b:	00 00                	add    %al,(%rax)
  40075d:	00 00                	add    %al,(%rax)
	...

0000000000400760 <__FRAME_END__>:
  400760:	00 00                	add    %al,(%rax)
	...

Disassembly of section .ctors:

0000000000600e18 <__CTOR_LIST__>:
  600e18:	ff                   	(bad)  
  600e19:	ff                   	(bad)  
  600e1a:	ff                   	(bad)  
  600e1b:	ff                   	(bad)  
  600e1c:	ff                   	(bad)  
  600e1d:	ff                   	(bad)  
  600e1e:	ff                   	(bad)  
  600e1f:	ff 00                	incl   (%rax)

0000000000600e20 <__CTOR_END__>:
	...

Disassembly of section .dtors:

0000000000600e28 <__DTOR_LIST__>:
  600e28:	ff                   	(bad)  
  600e29:	ff                   	(bad)  
  600e2a:	ff                   	(bad)  
  600e2b:	ff                   	(bad)  
  600e2c:	ff                   	(bad)  
  600e2d:	ff                   	(bad)  
  600e2e:	ff                   	(bad)  
  600e2f:	ff 00                	incl   (%rax)

0000000000600e30 <__DTOR_END__>:
	...

Disassembly of section .jcr:

0000000000600e38 <__JCR_END__>:
	...

Disassembly of section .dynamic:

0000000000600e40 <_DYNAMIC>:
  600e40:	01 00                	add    %eax,(%rax)
  600e42:	00 00                	add    %al,(%rax)
  600e44:	00 00                	add    %al,(%rax)
  600e46:	00 00                	add    %al,(%rax)
  600e48:	10 00                	adc    %al,(%rax)
  600e4a:	00 00                	add    %al,(%rax)
  600e4c:	00 00                	add    %al,(%rax)
  600e4e:	00 00                	add    %al,(%rax)
  600e50:	0c 00                	or     $0x0,%al
  600e52:	00 00                	add    %al,(%rax)
  600e54:	00 00                	add    %al,(%rax)
  600e56:	00 00                	add    %al,(%rax)
  600e58:	f0 03 40 00          	lock add 0x0(%rax),%eax
  600e5c:	00 00                	add    %al,(%rax)
  600e5e:	00 00                	add    %al,(%rax)
  600e60:	0d 00 00 00 00       	or     $0x0,%eax
  600e65:	00 00                	add    %al,(%rax)
  600e67:	00 88 06 40 00 00    	add    %cl,0x4006(%rax)
  600e6d:	00 00                	add    %al,(%rax)
  600e6f:	00 04 00             	add    %al,(%rax,%rax,1)
  600e72:	00 00                	add    %al,(%rax)
  600e74:	00 00                	add    %al,(%rax)
  600e76:	00 00                	add    %al,(%rax)
  600e78:	98                   	cwtl   
  600e79:	02 40 00             	add    0x0(%rax),%al
  600e7c:	00 00                	add    %al,(%rax)
  600e7e:	00 00                	add    %al,(%rax)
  600e80:	f5                   	cmc    
  600e81:	fe                   	(bad)  
  600e82:	ff 6f 00             	ljmpq  *0x0(%rdi)
  600e85:	00 00                	add    %al,(%rax)
  600e87:	00 c0                	add    %al,%al
  600e89:	02 40 00             	add    0x0(%rax),%al
  600e8c:	00 00                	add    %al,(%rax)
  600e8e:	00 00                	add    %al,(%rax)
  600e90:	05 00 00 00 00       	add    $0x0,%eax
  600e95:	00 00                	add    %al,(%rax)
  600e97:	00 40 03             	add    %al,0x3(%rax)
  600e9a:	40 00 00             	add    %al,(%rax)
  600e9d:	00 00                	add    %al,(%rax)
  600e9f:	00 06                	add    %al,(%rsi)
  600ea1:	00 00                	add    %al,(%rax)
  600ea3:	00 00                	add    %al,(%rax)
  600ea5:	00 00                	add    %al,(%rax)
  600ea7:	00 e0                	add    %ah,%al
  600ea9:	02 40 00             	add    0x0(%rax),%al
  600eac:	00 00                	add    %al,(%rax)
  600eae:	00 00                	add    %al,(%rax)
  600eb0:	0a 00                	or     (%rax),%al
  600eb2:	00 00                	add    %al,(%rax)
  600eb4:	00 00                	add    %al,(%rax)
  600eb6:	00 00                	add    %al,(%rax)
  600eb8:	3f                   	(bad)  
  600eb9:	00 00                	add    %al,(%rax)
  600ebb:	00 00                	add    %al,(%rax)
  600ebd:	00 00                	add    %al,(%rax)
  600ebf:	00 0b                	add    %cl,(%rbx)
  600ec1:	00 00                	add    %al,(%rax)
  600ec3:	00 00                	add    %al,(%rax)
  600ec5:	00 00                	add    %al,(%rax)
  600ec7:	00 18                	add    %bl,(%rax)
  600ec9:	00 00                	add    %al,(%rax)
  600ecb:	00 00                	add    %al,(%rax)
  600ecd:	00 00                	add    %al,(%rax)
  600ecf:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 600ed5 <_DYNAMIC+0x95>
	...
  600edd:	00 00                	add    %al,(%rax)
  600edf:	00 03                	add    %al,(%rbx)
  600ee1:	00 00                	add    %al,(%rax)
  600ee3:	00 00                	add    %al,(%rax)
  600ee5:	00 00                	add    %al,(%rax)
  600ee7:	00 e8                	add    %ch,%al
  600ee9:	0f 60 00             	punpcklbw (%rax),%mm0
  600eec:	00 00                	add    %al,(%rax)
  600eee:	00 00                	add    %al,(%rax)
  600ef0:	02 00                	add    (%rax),%al
  600ef2:	00 00                	add    %al,(%rax)
  600ef4:	00 00                	add    %al,(%rax)
  600ef6:	00 00                	add    %al,(%rax)
  600ef8:	30 00                	xor    %al,(%rax)
  600efa:	00 00                	add    %al,(%rax)
  600efc:	00 00                	add    %al,(%rax)
  600efe:	00 00                	add    %al,(%rax)
  600f00:	14 00                	adc    $0x0,%al
  600f02:	00 00                	add    %al,(%rax)
  600f04:	00 00                	add    %al,(%rax)
  600f06:	00 00                	add    %al,(%rax)
  600f08:	07                   	(bad)  
  600f09:	00 00                	add    %al,(%rax)
  600f0b:	00 00                	add    %al,(%rax)
  600f0d:	00 00                	add    %al,(%rax)
  600f0f:	00 17                	add    %dl,(%rdi)
  600f11:	00 00                	add    %al,(%rax)
  600f13:	00 00                	add    %al,(%rax)
  600f15:	00 00                	add    %al,(%rax)
  600f17:	00 c0                	add    %al,%al
  600f19:	03 40 00             	add    0x0(%rax),%eax
  600f1c:	00 00                	add    %al,(%rax)
  600f1e:	00 00                	add    %al,(%rax)
  600f20:	07                   	(bad)  
  600f21:	00 00                	add    %al,(%rax)
  600f23:	00 00                	add    %al,(%rax)
  600f25:	00 00                	add    %al,(%rax)
  600f27:	00 a8 03 40 00 00    	add    %ch,0x4003(%rax)
  600f2d:	00 00                	add    %al,(%rax)
  600f2f:	00 08                	add    %cl,(%rax)
  600f31:	00 00                	add    %al,(%rax)
  600f33:	00 00                	add    %al,(%rax)
  600f35:	00 00                	add    %al,(%rax)
  600f37:	00 18                	add    %bl,(%rax)
  600f39:	00 00                	add    %al,(%rax)
  600f3b:	00 00                	add    %al,(%rax)
  600f3d:	00 00                	add    %al,(%rax)
  600f3f:	00 09                	add    %cl,(%rcx)
  600f41:	00 00                	add    %al,(%rax)
  600f43:	00 00                	add    %al,(%rax)
  600f45:	00 00                	add    %al,(%rax)
  600f47:	00 18                	add    %bl,(%rax)
  600f49:	00 00                	add    %al,(%rax)
  600f4b:	00 00                	add    %al,(%rax)
  600f4d:	00 00                	add    %al,(%rax)
  600f4f:	00 fe                	add    %bh,%dh
  600f51:	ff                   	(bad)  
  600f52:	ff 6f 00             	ljmpq  *0x0(%rdi)
  600f55:	00 00                	add    %al,(%rax)
  600f57:	00 88 03 40 00 00    	add    %cl,0x4003(%rax)
  600f5d:	00 00                	add    %al,(%rax)
  600f5f:	00 ff                	add    %bh,%bh
  600f61:	ff                   	(bad)  
  600f62:	ff 6f 00             	ljmpq  *0x0(%rdi)
  600f65:	00 00                	add    %al,(%rax)
  600f67:	00 01                	add    %al,(%rcx)
  600f69:	00 00                	add    %al,(%rax)
  600f6b:	00 00                	add    %al,(%rax)
  600f6d:	00 00                	add    %al,(%rax)
  600f6f:	00 f0                	add    %dh,%al
  600f71:	ff                   	(bad)  
  600f72:	ff 6f 00             	ljmpq  *0x0(%rdi)
  600f75:	00 00                	add    %al,(%rax)
  600f77:	00 80 03 40 00 00    	add    %al,0x4003(%rax)
	...

Disassembly of section .got:

0000000000600fe0 <.got>:
	...

Disassembly of section .got.plt:

0000000000600fe8 <_GLOBAL_OFFSET_TABLE_>:
  600fe8:	40 0e                	rex (bad)  
  600fea:	60                   	(bad)  
	...
  600fff:	00 1e                	add    %bl,(%rsi)
  601001:	04 40                	add    $0x40,%al
  601003:	00 00                	add    %al,(%rax)
  601005:	00 00                	add    %al,(%rax)
  601007:	00 2e                	add    %ch,(%rsi)
  601009:	04 40                	add    $0x40,%al
  60100b:	00 00                	add    %al,(%rax)
  60100d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .data:

0000000000601010 <__data_start>:
	...

0000000000601018 <__dso_handle>:
	...

Disassembly of section .bss:

0000000000601020 <completed.7382>:
	...

0000000000601028 <dtor_idx.7384>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp    (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0x400378>
   a:	74 75                	je     81 <_init-0x40036f>
   c:	20 34 2e             	and    %dh,(%rsi,%rbp,1)
   f:	34 2e                	xor    $0x2e,%al
  11:	33 2d 34 75 62 75    	xor    0x75627534(%rip),%ebp        # 7562754b <_end+0x7502651b>
  17:	6e                   	outsb  %ds:(%rsi),(%dx)
  18:	74 75                	je     8f <_init-0x400361>
  1a:	35 29 20 34 2e       	xor    $0x2e342029,%eax
  1f:	34 2e                	xor    $0x2e,%al
  21:	33 00                	xor    (%rax),%eax
